apiVersion: apps/v1
kind: Deployment
metadata:
  name: torchserve
spec:
  replicas: 1
  selector:
    matchLabels:
      app: torchserve
  template:
    metadata:
      labels:
        app: torchserve
    spec:
      containers:
      - name: torchserve
        image: ${DOCKER_USERNAME}/model-server:latest
        ports:
        - name: inference
          containerPort: 8080
          protocol: TCP
        - name: management
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 8082
          protocol: TCP
        env:
        - name: TS_DISABLE_TOKEN_AUTH
          value: "true"
        volumeMounts:
        - name: model-store
          mountPath: /home/model-server/model-store
        - name: config-properties
          mountPath: /home/model-server/config.properties
          subPath: config.properties
        - name: model-handler
          mountPath: /home/model-server/model_handler.py
          subPath: model_handler.py
        - name: index-to-name
          mountPath: /home/model-server/index_to_name.json
          subPath: index_to_name.json
      volumes:
      - name: model-store
        persistentVolumeClaim:
          claimName: model-store-pvc
      - name: config-properties
        configMap:
          name: torchserve-config
      - name: model-handler
        configMap:
          name: torchserve-handler
      - name: index-to-name
        configMap:
          name: torchserve-index